#!/usr/bin/env python3
"""
Coordinate Calibration for Wokwi AutoGUI
========================================

This script helps you find the exact coordinates for clicking in Wokwi.
Run this and click on the specified areas to get the coordinates.
"""

import pyautogui
import time

def get_coordinates():
    """Interactive coordinate finder"""
    print("üéØ Wokwi Coordinate Calibration Tool")
    print("=" * 50)
    print("This tool will help you find the exact coordinates for automation.")
    print("Make sure Wokwi is open in your browser first!")
    print()
    
    coordinates = {}
    
    targets = [
        ("diagram_tab", "the 'diagram.json' tab"),
        ("code_area", "the middle of the code editor area"),
        ("empty_area", "an empty area on the right (circuit view)"),
        ("circuit_area_top_left", "top-left corner of the circuit area"),
        ("circuit_area_bottom_right", "bottom-right corner of the circuit area")
    ]
    
    for key, description in targets:
        print(f"üìç Next target: {description}")
        print("   1. Position your mouse over the target")
        print("   2. Press ENTER to capture coordinates")
        print("   3. Or press 's' + ENTER to skip")
        
        response = input("   Ready? (press ENTER): ").strip().lower()
        
        if response == 's':
            print("   ‚è≠Ô∏è  Skipped")
            continue
        
        # Get current mouse position
        x, y = pyautogui.position()
        coordinates[key] = (x, y)
        print(f"   ‚úÖ Captured: {key} = ({x}, {y})")
        print()
    
    return coordinates

def calculate_region(coordinates):
    """Calculate screenshot region from coordinates"""
    if 'circuit_area_top_left' in coordinates and 'circuit_area_bottom_right' in coordinates:
        x1, y1 = coordinates['circuit_area_top_left']
        x2, y2 = coordinates['circuit_area_bottom_right']
        
        # Calculate region parameters
        x = x1
        y = y1
        width = x2 - x1
        height = y2 - y1
        
        return (x, y, width, height)
    
    return None

def generate_config(coordinates):
    """Generate configuration code"""
    print("\nüîß Generated Configuration")
    print("=" * 50)
    print("Copy this code into your wokwi_autogui.py script:")
    print()
    print("# Coordinates (generated by coordinate calibration)")
    
    if 'diagram_tab' in coordinates:
        x, y = coordinates['diagram_tab']
        print(f"diagram_tab_pos = ({x}, {y})  # diagram.json tab")
    
    if 'code_area' in coordinates:
        x, y = coordinates['code_area']
        print(f"code_area_pos = ({x}, {y})    # Text editor area")
    
    if 'empty_area' in coordinates:
        x, y = coordinates['empty_area']
        print(f"empty_click_pos = ({x}, {y})  # Empty area for cursor clear")
    
    region = calculate_region(coordinates)
    if region:
        x, y, width, height = region
        print(f"# Screenshot region = (x, y, width, height)")
        print(f"screenshot_region = ({x}, {y}, {width}, {height})  # Circuit area")
    
    print("\nüí° Update these values in wokwi_autogui.py and run the automation!")

def main():
    """Main calibration function"""
    print("Starting coordinate calibration in 3 seconds...")
    print("Make sure Wokwi is open and visible!")
    
    for i in range(3, 0, -1):
        print(f"{i}...")
        time.sleep(1)
    
    print("üöÄ Starting calibration!")
    print()
    
    coordinates = get_coordinates()
    
    if coordinates:
        generate_config(coordinates)
        
        # Save coordinates to file
        with open('wokwi_coordinates.txt', 'w') as f:
            f.write("# Wokwi Coordinates for AutoGUI\n")
            f.write("# Generated by coordinate calibration tool\n\n")
            
            for key, (x, y) in coordinates.items():
                f.write(f"{key} = ({x}, {y})\n")
            
            region = calculate_region(coordinates)
            if region:
                x, y, width, height = region
                f.write(f"\nscreenshot_region = ({x}, {y}, {width}, {height})\n")
        
        print(f"\nüíæ Coordinates saved to: wokwi_coordinates.txt")
    else:
        print("\n‚ùå No coordinates captured")
    
    print("\nüéØ Calibration complete!")

if __name__ == "__main__":
    main()
